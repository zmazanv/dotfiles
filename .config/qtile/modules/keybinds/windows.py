# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
###############################################################################
# ~/.config/qtile/modules/keybinds/windows.py

# Mapas de teclas para modificar ventanas de Qtile.
###############################################################################
# ~/.config/qtile/modules/keybinds/windows.py

# Keymaps for modifying Qtile windows.
###############################################################################
from libqtile.config import Key
from libqtile.lazy import lazy
# ../definitions/keybinds.py
from ..definitions.keybinds import mod
###############################################################################
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #


keys = [
    ###########################################################################
    # FOCO DE PANTALLA
    #
    # Cambiará el foco de la pantall actual a...
    ###########################################################################
    # SCREEN FOCUS
    #
    # Will change the focus from the current screen to...
    ###########################################################################
    # -------------------------------------------------------------------------
    # ... la 1ra pantalla.
    # -------------------------------------------------------------------------
    # ... the 1st screen.
    # -------------------------------------------------------------------------
    # SUPER + p
    Key(
        [mod],
        'o',
        lazy.to_screen(0),
        desc='Switch focus to monitor 1',
    ),
    # -------------------------------------------------------------------------
    #
    # -------------------------------------------------------------------------
    # ... la 2da pantalla.
    # -------------------------------------------------------------------------
    # ... the 2nd screen.
    # -------------------------------------------------------------------------
    # SUPER + o
    Key(
        [mod],
        'p',
        lazy.to_screen(1),
        desc='Switch focus to monitor 2',
    ),
    # -------------------------------------------------------------------------
    ###########################################################################


    ###########################################################################
    # FOCO DE VENTANAS
    #
    # Cambiará el foco de la ventana actual a la ventana...
    ###########################################################################
    # WINDOW FOCUS
    #
    # Will change the focus from the current window to...
    ###########################################################################
    # -------------------------------------------------------------------------
    # ... a la izquierda.
    # -------------------------------------------------------------------------
    # ... to the left.
    # -------------------------------------------------------------------------
    # SUPER + h
    Key(
        [mod],
        'h',
        lazy.layout.left(),
        desc='Move focus to left',
    ),
    # -------------------------------------------------------------------------
    #
    # -------------------------------------------------------------------------
    # ... a la derecha.
    # -------------------------------------------------------------------------
    # ... to the right.
    # -------------------------------------------------------------------------
    # SUPER + l
    Key(
        [mod],
        'l',
        lazy.layout.right(),
        desc='Move focus to right',
    ),
    # -------------------------------------------------------------------------
    #
    # -------------------------------------------------------------------------
    # ... abajo.
    # -------------------------------------------------------------------------
    # ... underneath.
    # -------------------------------------------------------------------------
    # SUPER + j
    Key(
        [mod],
        'j',
        lazy.layout.down(),
        desc='Move focus down',
    ),
    # -------------------------------------------------------------------------
    #
    # -------------------------------------------------------------------------
    # ... arriba.
    # -------------------------------------------------------------------------
    # ... above.
    # -------------------------------------------------------------------------
    # SUPER + k
    Key(
        [mod],
        'k',
        lazy.layout.up(),
        desc='Move focus up',
    ),
    # -------------------------------------------------------------------------
    ###########################################################################



    ###########################################################################
    # POSICIÓN DE VENTANAS
    #
    # Se moverá la ventana actual hacia...
    ###########################################################################
    # WINDOW POSITIONS
    #
    # Will move the current window...
    ###########################################################################
    # -------------------------------------------------------------------------
    # ... la izquierda.
    # -------------------------------------------------------------------------
    # ... left.
    # -------------------------------------------------------------------------
    Key(
        [mod, 'shift'],
        'h',
        lazy.layout.shuffle_left(),
        desc='Move window to the left',
    ),
    # -------------------------------------------------------------------------
    #
    # -------------------------------------------------------------------------
    # ... la derecha.
    # -------------------------------------------------------------------------
    # ... right.
    # -------------------------------------------------------------------------
    Key(
        [mod, 'shift'],
        'l',
        lazy.layout.shuffle_right(),
        desc='Move window to the right',
    ),
    # -------------------------------------------------------------------------
    #
    # -------------------------------------------------------------------------
    # ... abajo.
    # -------------------------------------------------------------------------
    # ... down.
    # -------------------------------------------------------------------------
    Key(
        [mod, 'shift'],
        'j',
        lazy.layout.shuffle_down(),
        desc='Move window down',
    ),
    # -------------------------------------------------------------------------
    #
    # -------------------------------------------------------------------------
    # ... arriba.
    # -------------------------------------------------------------------------
    # ... up.
    # -------------------------------------------------------------------------
    Key(
        [mod, 'shift'],
        'k',
        lazy.layout.shuffle_up(),
        desc='Move window up',
    ),
    # -------------------------------------------------------------------------
    ###########################################################################


    ###########################################################################
    # TAMAÑOS DE VENTANAS
    #
    # Crecerá la ventana actual hacia...
    ###########################################################################
    # WINDOW SIZES
    #
    # Will grow the current window...
    ###########################################################################
    # -------------------------------------------------------------------------
    # ... la izquierda.
    # -------------------------------------------------------------------------
    # ... left.
    # -------------------------------------------------------------------------
    # SUPER + CONTROL + h
    Key(
        [mod, 'control'],
        'h',
        lazy.layout.grow_left(),
        desc='Grow window to the left',
    ),
    # -------------------------------------------------------------------------
    #
    # -------------------------------------------------------------------------
    # ... la derecha.
    # -------------------------------------------------------------------------
    # ... right.
    # -------------------------------------------------------------------------
    # SUPER + CONTROL + l
    Key(
        [mod, 'control'],
        'l',
        lazy.layout.grow_right(),
        desc='Grow window to the right',
    ),
    # -------------------------------------------------------------------------
    #
    # -------------------------------------------------------------------------
    # ... abajo.
    # -------------------------------------------------------------------------
    # ... down.
    # -------------------------------------------------------------------------
    # SUPER + CONTROL + j
    Key(
        [mod, 'control'],
        'j',
        lazy.layout.grow_down(),
        desc='Grow window down',
    ),
    # -------------------------------------------------------------------------
    #
    # -------------------------------------------------------------------------
    # ... arriba.
    # -------------------------------------------------------------------------
    # ... up.
    # -------------------------------------------------------------------------
    # SUPER + CONTROL + k
    Key(
        [mod, 'control'],
        'k',
        lazy.layout.grow_up(),
        desc='Grow window up',
    ),
    # -------------------------------------------------------------------------
    #
    # -------------------------------------------------------------------------
    # Restablecerá los tamaños de las ventanas a lo predeterminado.
    # -------------------------------------------------------------------------
    # Will reset the sizes of the windows to the default.
    # -------------------------------------------------------------------------
    # SUPER + CONTROL + n
    Key(
        [mod, 'control'],
        'n',
        lazy.layout.normalize(),
        desc='Reset all window sizes',
    ),
    # -------------------------------------------------------------------------
    ###########################################################################


    ###########################################################################
    # DISPOSICIONES
    ###########################################################################
    # LAYOUTS
    ###########################################################################
    # -------------------------------------------------------------------------
    # Se cambiará a la siguiente disposición de ventanas.
    # -------------------------------------------------------------------------
    # Will change to the next window layout.
    # -------------------------------------------------------------------------
    # SUPER + n
    Key(
        [mod],
        'n',
        lazy.next_layout(),
        desc='Switch to next layout',
    ),
    # -------------------------------------------------------------------------
    ###########################################################################


    ###########################################################################
    # DIVISIÓN
    #
    # - Dividido: Todas las ventanas estarán visibles.
    # - No Dividido: 1 ventana estará visible, como la disposición maximizada,
    #                mas con múltiples paneles de montones.
    ###########################################################################
    # SPLITTING
    #
    # Split: All the windows will be visible.
    # Unsplit: 1 window will be visible, like the max layout,
    #          but with multiple stack panes.
    ###########################################################################
    # -------------------------------------------------------------------------
    # Alternará entre maximizar o dividir el montón actual.
    # -------------------------------------------------------------------------
    # Will alternate between maximising or splitting the current stack.
    # -------------------------------------------------------------------------
    # SUPER + SHIFT + n
    Key(
        [mod, 'shift'],
        'n',
        lazy.layout.toggle_split(),
        desc='Toggle between split and unsplit sides of stack',
    ),
    # -------------------------------------------------------------------------
    ###########################################################################


    ###########################################################################
    # VENTANAS FLOTANTES
    ###########################################################################
    # FLOATING WINDOWS
    ###########################################################################
    # -------------------------------------------------------------------------
    # Alternará la ventana actual entre modo flotante y no.
    # -------------------------------------------------------------------------
    # Will toggle the current window to/from floating mode.
    # -------------------------------------------------------------------------
    # SUPER + CONTROL + SHIFT + n
    Key(
        [mod, 'control', 'shift'],
        'n',
        lazy.window.toggle_floating(),
        desc='Put the focused window to/from floating mode',
    ),
    # -------------------------------------------------------------------------
    ###########################################################################


    ###########################################################################
    # CIERRE
    ###########################################################################
    # CLOSING
    ###########################################################################
    # -------------------------------------------------------------------------
    # Cerrará la ventana actual.
    # -------------------------------------------------------------------------
    # Will kill the current window.
    # -------------------------------------------------------------------------
    # SUPER + m
    Key(
        [mod],
        'm',
        lazy.window.kill(),
        desc='Kill focused window',
    ),
    # -------------------------------------------------------------------------
    ###########################################################################
]
