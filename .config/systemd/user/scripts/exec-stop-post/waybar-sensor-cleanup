#!/usr/bin/env bash

# This script is meant to run after stopping systemd user service
# waybar.service.
# This script is to clean up ${waybar_sensors_dir} containing the created HWMON
# sensor symlinks by the prestart script at ${waybar_sensors_dir} by removing
# them.
# For further detail, please see the prestart script.

# Signals that 'trap' will catch.
sigs_to_trap=(
	"SIGINT"
	"SIGTERM"
)

# Where the created symlinks live.
waybar_sensors_dir="${HOME}/.config/waybar/sensors"

# Log message to systemd user journal.
function fn_log {
	local level=${1,,}
	local message="${2}"
	logger --tag "waybar.service-poststop" --priority "user.${level}" "${message}"
}

# Log failure message and exit(1).
function fn_failure_exit {
	local message="${1}"
	fn_log "err" "FAILURE: ${message} Exiting script..."
	exit 1
}

# Log message when skipping the script and exit(0).
function fn_skip_exit {
	local message="${1}"
	fn_log "warning" "SKIP: ${message} Skipping script..."
	exit 0
}

# Log success message and exit(0).
function fn_success_exit {
	fn_log "info" "SUCCESS: Successfully ran poststop cleanup script. Exiting..."
	exit 0
}

# Verify that the Wayland sensors symlink directory exists. Exit if false.
function fn_validate {
	if [[ ! -d "${waybar_sensors_dir}" ]]; then
		fn_skip_exit "Nothing to be done there is no HWMON sensors symlink directory for Waybar at ${waybar_sensors_dir}."
	fi
}

# Clean up Waybar sensor input symlinks. Skip if none found.
function fn_cleanup {
	if [[ ! -d "${waybar_sensors_dir}" ]]; then
		fn_log "err" "CLEANUP: Cleanup failed as HWMON sensors symlink directory for Waybar at ${waybar_sensors_dir} does not exist."
		return 1
	fi

	local has_symlinks="$(find "${waybar_sensors_dir}" -maxdepth 1 -type l)"

	if [[ -z "${has_symlinks}" ]]; then
		fn_log "info" "CLEANUP: No HWMON sensor symlinks to clean up in ${waybar_sensors_dir}."
	else
		for sensor_symlink in "${waybar_sensors_dir}"/*; do
			if [[ -L "${sensor_symlink}" ]]; then
				rm --force "${sensor_symlink}"
				fn_log "notice" "CLEANUP: Removed HWMON sensor symlink at ${sensor_symlink}."
			fi
		done
	fi
}

function fn_trap_exit {
	local trapped_signal="${1}"
	local message="Caught ${trapped_signal} signal to stop script. Cleanup"

	if fn_cleanup; then
		fn_failure_exit "${message} successful."
	else
		fn_failure_exit "${message} failed."
	fi
}

# Configure traps for cleanup specific to the signal caught.
for sig in "${sigs_to_trap[@]}"; do
	trap "fn_trap_exit ${sig}" "${sig}"
done

fn_validate
fn_cleanup

fn_success_exit
